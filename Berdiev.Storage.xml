<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Berdiev.Storage</name>
    </assembly>
    <members>
        <member name="T:Berdiev.Storage.DatabaseType">
            <summary>
            Represents database types.
            </summary>
        </member>
        <member name="F:Berdiev.Storage.DatabaseType.SQLite">
            <summary>
            SQLite 
            </summary>
        </member>
        <member name="F:Berdiev.Storage.DatabaseType.Postgres">
            <summary>
            Postgres
            </summary>
        </member>
        <member name="T:Berdiev.Storage.Factory.Column">
            <summary>
            Represents the column of a <see cref="T:Berdiev.Storage.Factory.Table"/>.
            </summary>
        </member>
        <member name="P:Berdiev.Storage.Factory.Column.ColumnName">
            <summary>
            Represents column name.
            </summary>
        </member>
        <member name="P:Berdiev.Storage.Factory.Column.ColumnType">
            <summary>
            Represents column type.
            </summary>
        </member>
        <member name="P:Berdiev.Storage.Factory.Column.IsPrimaryKey">
            <summary>
            Sets the column as primary key.
            </summary>
        </member>
        <member name="P:Berdiev.Storage.Factory.Column.IsForeignKey">
            <summary>
            Sets the column as foreign key.
            </summary>
        </member>
        <member name="P:Berdiev.Storage.Factory.Column.IsIdentity">
            <summary>
            Sets the column as identity.
            </summary>
        </member>
        <member name="M:Berdiev.Storage.Factory.Column.Default``1(System.String)">
            <summary>
            Creates a default column.
            </summary>
            <param name="columnName">Name of the column.</param>
            <typeparam name="T">Type of the column.</typeparam>
        </member>
        <member name="M:Berdiev.Storage.Factory.Column.From``1(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates a column with all supported constraints.
            </summary>
            <param name="columnName">Name of the column.</param>
            <param name="primaryKey">Sets the column as primary key.</param>
            <param name="foreignKey">Sets the column as foreign key.</param>
            <param name="identity">Defines the column as identity.</param>
            <typeparam name="T">Type of the column.</typeparam>
        </member>
        <member name="T:Berdiev.Storage.Factory.DatabaseFactory">
            <summary>
            Provides mechanism for database creations.
            </summary>
        </member>
        <member name="M:Berdiev.Storage.Factory.DatabaseFactory.CreateDatabase(Berdiev.Storage.DatabaseType,System.String)">
            <summary>
            Creates a database, that can be used for further operations.
            </summary>
            <param name="type">Defines which database type should be created.</param>
            <param name="filePath">Path where the database should be created.</param>
            <exception cref="T:System.ArgumentException">If the file path is invalid</exception>
            <exception cref="T:System.InvalidOperationException">If the database already exists</exception>
        </member>
        <member name="T:Berdiev.Storage.Factory.Table">
            <summary>
            Represents the table of an relational database.
            </summary>
        </member>
        <member name="P:Berdiev.Storage.Factory.Table.Name">
            <summary>
            Name of the database.
            </summary>
        </member>
        <member name="P:Berdiev.Storage.Factory.Table.Columns">
            <summary>
            Configured columns of the current table
            </summary>
        </member>
        <member name="M:Berdiev.Storage.Factory.Table.#ctor(System.String,System.Collections.Generic.IReadOnlyList{Berdiev.Storage.Factory.Column})">
            <summary>
            Instantiates new table.
            </summary>
            <param name="name">Name of the table.</param>
            <param name="columns">Column s of the table.</param>
        </member>
        <member name="T:Berdiev.Storage.Factory.TableFactory">
            <summary>
            This factory should be used to create relational database tables.
            </summary>
        </member>
        <member name="M:Berdiev.Storage.Factory.TableFactory.CreateTable(Berdiev.Storage.DatabaseType,System.String,Berdiev.Storage.Factory.Table)">
            <summary>
            Creates a table of an existing database.
            </summary>
            <param name="type">Type of the existing SQL database.</param>
            <param name="path">Path of the existing database.</param>
            <param name="table">Table configuration for the table creation.</param>
            <exception cref="T:System.NotSupportedException">Thrown if the type is not supported.</exception>
            <exception cref="T:System.NotSupportedException">If the database does not exist.</exception>
        </member>
    </members>
</doc>
